{"remainingRequest":"C:\\work\\project\\Quick-Select-Angular-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\work\\project\\Quick-Select-Angular-master\\node_modules\\chart.js\\src\\elements\\element.point.js","dependencies":[{"path":"C:\\work\\project\\Quick-Select-Angular-master\\node_modules\\chart.js\\src\\elements\\element.point.js","mtime":1534453529658},{"path":"C:\\work\\project\\Quick-Select-Angular-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534453527822},{"path":"C:\\work\\project\\Quick-Select-Angular-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1534453515782}],"contextDependencies":[],"result":["'use strict';\r\n\r\nvar defaults = require('../core/core.defaults');\r\nvar Element = require('../core/core.element');\r\nvar helpers = require('../helpers/index');\r\n\r\nvar defaultColor = defaults.global.defaultColor;\r\n\r\ndefaults._set('global', {\r\n\telements: {\r\n\t\tpoint: {\r\n\t\t\tradius: 3,\r\n\t\t\tpointStyle: 'circle',\r\n\t\t\tbackgroundColor: defaultColor,\r\n\t\t\tborderColor: defaultColor,\r\n\t\t\tborderWidth: 1,\r\n\t\t\t// Hover\r\n\t\t\thitRadius: 1,\r\n\t\t\thoverRadius: 4,\r\n\t\t\thoverBorderWidth: 1\r\n\t\t}\r\n\t}\r\n});\r\n\r\nfunction xRange(mouseX) {\r\n\tvar vm = this._view;\r\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\r\n}\r\n\r\nfunction yRange(mouseY) {\r\n\tvar vm = this._view;\r\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\r\n}\r\n\r\nmodule.exports = Element.extend({\r\n\tinRange: function(mouseX, mouseY) {\r\n\t\tvar vm = this._view;\r\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n\t},\r\n\r\n\tinLabelRange: xRange,\r\n\tinXRange: xRange,\r\n\tinYRange: yRange,\r\n\r\n\tgetCenterPoint: function() {\r\n\t\tvar vm = this._view;\r\n\t\treturn {\r\n\t\t\tx: vm.x,\r\n\t\t\ty: vm.y\r\n\t\t};\r\n\t},\r\n\r\n\tgetArea: function() {\r\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\r\n\t},\r\n\r\n\ttooltipPosition: function() {\r\n\t\tvar vm = this._view;\r\n\t\treturn {\r\n\t\t\tx: vm.x,\r\n\t\t\ty: vm.y,\r\n\t\t\tpadding: vm.radius + vm.borderWidth\r\n\t\t};\r\n\t},\r\n\r\n\tdraw: function(chartArea) {\r\n\t\tvar vm = this._view;\r\n\t\tvar model = this._model;\r\n\t\tvar ctx = this._chart.ctx;\r\n\t\tvar pointStyle = vm.pointStyle;\r\n\t\tvar radius = vm.radius;\r\n\t\tvar x = vm.x;\r\n\t\tvar y = vm.y;\r\n\t\tvar color = helpers.color;\r\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\r\n\t\tvar ratio = 0;\r\n\r\n\t\tif (vm.skip) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\r\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\r\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n\t\t// Cliping for Points.\r\n\t\t// going out from inner charArea?\r\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\r\n\t\t\t// Point fade out\r\n\t\t\tif (model.x < chartArea.left) {\r\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\r\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\r\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\r\n\t\t\t} else if (model.y < chartArea.top) {\r\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\r\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\r\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\r\n\t\t\t}\r\n\t\t\tratio = Math.round(ratio * 100) / 100;\r\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\r\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\r\n\t\t}\r\n\r\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\r\n\t}\r\n});\r\n",null]}