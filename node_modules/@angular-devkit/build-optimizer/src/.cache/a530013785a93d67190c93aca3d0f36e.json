{"remainingRequest":"C:\\work\\project\\Quick-Select-Angular-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\work\\project\\Quick-Select-Angular-master\\node_modules\\moment\\locale\\pl.js","dependencies":[{"path":"C:\\work\\project\\Quick-Select-Angular-master\\node_modules\\moment\\locale\\pl.js","mtime":1534453547094},{"path":"C:\\work\\project\\Quick-Select-Angular-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534453527822},{"path":"C:\\work\\project\\Quick-Select-Angular-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1534453515782}],"contextDependencies":[],"result":["//! moment.js locale configuration\r\n\r\n;(function (global, factory) {\r\n   typeof exports === 'object' && typeof module !== 'undefined'\r\n       && typeof require === 'function' ? factory(require('../moment')) :\r\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\r\n   factory(global.moment)\r\n}(this, (function (moment) { 'use strict';\r\n\r\n\r\n    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),\r\n        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\r\n    function plural(n) {\r\n        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);\r\n    }\r\n    function translate(number, withoutSuffix, key) {\r\n        var result = number + ' ';\r\n        switch (key) {\r\n            case 'ss':\r\n                return result + (plural(number) ? 'sekundy' : 'sekund');\r\n            case 'm':\r\n                return withoutSuffix ? 'minuta' : 'minutę';\r\n            case 'mm':\r\n                return result + (plural(number) ? 'minuty' : 'minut');\r\n            case 'h':\r\n                return withoutSuffix  ? 'godzina'  : 'godzinę';\r\n            case 'hh':\r\n                return result + (plural(number) ? 'godziny' : 'godzin');\r\n            case 'MM':\r\n                return result + (plural(number) ? 'miesiące' : 'miesięcy');\r\n            case 'yy':\r\n                return result + (plural(number) ? 'lata' : 'lat');\r\n        }\r\n    }\r\n\r\n    var pl = moment.defineLocale('pl', {\r\n        months : function (momentToFormat, format) {\r\n            if (!momentToFormat) {\r\n                return monthsNominative;\r\n            } else if (format === '') {\r\n                // Hack: if format empty we know this is used to generate\r\n                // RegExp by moment. Give then back both valid forms of months\r\n                // in RegExp ready format.\r\n                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';\r\n            } else if (/D MMMM/.test(format)) {\r\n                return monthsSubjective[momentToFormat.month()];\r\n            } else {\r\n                return monthsNominative[momentToFormat.month()];\r\n            }\r\n        },\r\n        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\r\n        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\r\n        weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\r\n        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\r\n        longDateFormat : {\r\n            LT : 'HH:mm',\r\n            LTS : 'HH:mm:ss',\r\n            L : 'DD.MM.YYYY',\r\n            LL : 'D MMMM YYYY',\r\n            LLL : 'D MMMM YYYY HH:mm',\r\n            LLLL : 'dddd, D MMMM YYYY HH:mm'\r\n        },\r\n        calendar : {\r\n            sameDay: '[Dziś o] LT',\r\n            nextDay: '[Jutro o] LT',\r\n            nextWeek: function () {\r\n                switch (this.day()) {\r\n                    case 0:\r\n                        return '[W niedzielę o] LT';\r\n\r\n                    case 2:\r\n                        return '[We wtorek o] LT';\r\n\r\n                    case 3:\r\n                        return '[W środę o] LT';\r\n\r\n                    case 6:\r\n                        return '[W sobotę o] LT';\r\n\r\n                    default:\r\n                        return '[W] dddd [o] LT';\r\n                }\r\n            },\r\n            lastDay: '[Wczoraj o] LT',\r\n            lastWeek: function () {\r\n                switch (this.day()) {\r\n                    case 0:\r\n                        return '[W zeszłą niedzielę o] LT';\r\n                    case 3:\r\n                        return '[W zeszłą środę o] LT';\r\n                    case 6:\r\n                        return '[W zeszłą sobotę o] LT';\r\n                    default:\r\n                        return '[W zeszły] dddd [o] LT';\r\n                }\r\n            },\r\n            sameElse: 'L'\r\n        },\r\n        relativeTime : {\r\n            future : 'za %s',\r\n            past : '%s temu',\r\n            s : 'kilka sekund',\r\n            ss : translate,\r\n            m : translate,\r\n            mm : translate,\r\n            h : translate,\r\n            hh : translate,\r\n            d : '1 dzień',\r\n            dd : '%d dni',\r\n            M : 'miesiąc',\r\n            MM : translate,\r\n            y : 'rok',\r\n            yy : translate\r\n        },\r\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n        ordinal : '%d.',\r\n        week : {\r\n            dow : 1, // Monday is the first day of the week.\r\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n        }\r\n    });\r\n\r\n    return pl;\r\n\r\n})));\r\n",null]}