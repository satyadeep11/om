{"remainingRequest":"C:\\work\\project\\Quick-Select-Angular-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\work\\project\\Quick-Select-Angular-master\\node_modules\\moment\\locale\\br.js","dependencies":[{"path":"C:\\work\\project\\Quick-Select-Angular-master\\node_modules\\moment\\locale\\br.js","mtime":1534453546955},{"path":"C:\\work\\project\\Quick-Select-Angular-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534453527822},{"path":"C:\\work\\project\\Quick-Select-Angular-master\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1534453515782}],"contextDependencies":[],"result":["//! moment.js locale configuration\r\n\r\n;(function (global, factory) {\r\n   typeof exports === 'object' && typeof module !== 'undefined'\r\n       && typeof require === 'function' ? factory(require('../moment')) :\r\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\r\n   factory(global.moment)\r\n}(this, (function (moment) { 'use strict';\r\n\r\n\r\n    function relativeTimeWithMutation(number, withoutSuffix, key) {\r\n        var format = {\r\n            'mm': 'munutenn',\r\n            'MM': 'miz',\r\n            'dd': 'devezh'\r\n        };\r\n        return number + ' ' + mutation(format[key], number);\r\n    }\r\n    function specialMutationForYears(number) {\r\n        switch (lastNumber(number)) {\r\n            case 1:\r\n            case 3:\r\n            case 4:\r\n            case 5:\r\n            case 9:\r\n                return number + ' bloaz';\r\n            default:\r\n                return number + ' vloaz';\r\n        }\r\n    }\r\n    function lastNumber(number) {\r\n        if (number > 9) {\r\n            return lastNumber(number % 10);\r\n        }\r\n        return number;\r\n    }\r\n    function mutation(text, number) {\r\n        if (number === 2) {\r\n            return softMutation(text);\r\n        }\r\n        return text;\r\n    }\r\n    function softMutation(text) {\r\n        var mutationTable = {\r\n            'm': 'v',\r\n            'b': 'v',\r\n            'd': 'z'\r\n        };\r\n        if (mutationTable[text.charAt(0)] === undefined) {\r\n            return text;\r\n        }\r\n        return mutationTable[text.charAt(0)] + text.substring(1);\r\n    }\r\n\r\n    var br = moment.defineLocale('br', {\r\n        months : 'Genver_C\\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),\r\n        monthsShort : 'Gen_C\\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\r\n        weekdays : 'Sul_Lun_Meurzh_Merc\\'her_Yaou_Gwener_Sadorn'.split('_'),\r\n        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\r\n        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\r\n        weekdaysParseExact : true,\r\n        longDateFormat : {\r\n            LT : 'h[e]mm A',\r\n            LTS : 'h[e]mm:ss A',\r\n            L : 'DD/MM/YYYY',\r\n            LL : 'D [a viz] MMMM YYYY',\r\n            LLL : 'D [a viz] MMMM YYYY h[e]mm A',\r\n            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'\r\n        },\r\n        calendar : {\r\n            sameDay : '[Hiziv da] LT',\r\n            nextDay : '[Warc\\'hoazh da] LT',\r\n            nextWeek : 'dddd [da] LT',\r\n            lastDay : '[Dec\\'h da] LT',\r\n            lastWeek : 'dddd [paset da] LT',\r\n            sameElse : 'L'\r\n        },\r\n        relativeTime : {\r\n            future : 'a-benn %s',\r\n            past : '%s \\'zo',\r\n            s : 'un nebeud segondennoù',\r\n            ss : '%d eilenn',\r\n            m : 'ur vunutenn',\r\n            mm : relativeTimeWithMutation,\r\n            h : 'un eur',\r\n            hh : '%d eur',\r\n            d : 'un devezh',\r\n            dd : relativeTimeWithMutation,\r\n            M : 'ur miz',\r\n            MM : relativeTimeWithMutation,\r\n            y : 'ur bloaz',\r\n            yy : specialMutationForYears\r\n        },\r\n        dayOfMonthOrdinalParse: /\\d{1,2}(añ|vet)/,\r\n        ordinal : function (number) {\r\n            var output = (number === 1) ? 'añ' : 'vet';\r\n            return number + output;\r\n        },\r\n        week : {\r\n            dow : 1, // Monday is the first day of the week.\r\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n        }\r\n    });\r\n\r\n    return br;\r\n\r\n})));\r\n",null]}