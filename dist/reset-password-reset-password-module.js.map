{"version":3,"sources":["webpack:///./src/app/reset-password.service.ts","webpack:///./src/app/reset-password/reset-password-routing.module.ts","webpack:///./src/app/reset-password/reset-password.component.html","webpack:///./src/app/reset-password/reset-password.component.scss","webpack:///./src/app/reset-password/reset-password.component.ts","webpack:///./src/app/reset-password/reset-password.module.ts","webpack:///./src/app/reset-password/userPassword.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAA2C;AAE6B;AAEnC;AAKrC;IAEE,8BAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;IAAI,CAAC;IAErC,oCAAK,GAAL,UAAM,MAAM;QAEV,IAAI,OAAO,GAAG,IAAI,qDAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CACpB,4CAA4C,EAC5C,MAAM,EACN,OAAO,CACR,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,GAAa,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC;IAC7C,CAAC;IAdU,oBAAoB;QAHhC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG4B,kDAAI;OAFrB,oBAAoB,CAehC;IAAD,2BAAC;CAAA;AAfgC;;;;;;;;;;;;;;;;;;;;;;;;ACTQ;AACc;AACa;AAEpE,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gFAAsB;KAC9C;CACJ,CAAC;AAMF;IAAA;IACA,CAAC;IADY,0BAA0B;QAJtC,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,0BAA0B,CACtC;IAAD,iCAAC;CAAA;AADsC;;;;;;;;;;;;ACdvC,8oDAA8oD,2eAA2e,8H;;;;;;;;;;;ACAznE,yBAAyB,mBAAmB,EAAE,iBAAiB,uBAAuB,WAAW,YAAY,aAAa,cAAc,mBAAmB,qBAAqB,uBAAuB,gBAAgB,iBAAiB,EAAE,2BAA2B,iBAAiB,EAAE,2BAA2B,mBAAmB,yBAAyB,sBAAsB,6BAA6B,uBAAuB,EAAE,kCAAkC,sBAAsB,mBAAmB,uBAAuB,wDAAwD,kBAAkB,uBAAuB,EAAE,wCAAwC,oCAAoC,uBAAuB,EAAE,8BAA8B,0BAA0B,sCAAsC,uBAAuB,iDAAiD,sBAAsB,wBAAwB,sBAAsB,EAAE,gJAAgJ,mBAAmB,8BAA8B,oBAAoB,EAAE,oBAAoB,uBAAuB,uBAAuB,0BAA0B,sBAAsB,EAAE,0BAA0B,wCAAwC,EAAE,6BAA6B,qBAAqB,EAAE,8DAA8D,mDAAmD,EAAE,oDAAoD,4EAA4E,EAAE,qDAAqD,4EAA4E,EAAE,yDAAyD,mDAAmD,EAAE,+BAA+B,sBAAsB,EAAE,8BAA8B,yBAAyB,6BAA6B,EAAE,+BAA+B,wBAAwB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9/D;AACM;AACQ;AACvB;AAEK;AAQ9C;IAOE,gCAAmB,MAAc,EAAS,YAAkC;QAAzD,WAAM,GAAN,MAAM,CAAQ;QAAS,iBAAY,GAAZ,YAAY,CAAsB;QAF5E,UAAK,GAAG,IAAI,0DAAY,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC,mBAAkB;IAEwB,CAAC;IAEjF,yCAAQ,GAAR;QACE,IAAI,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,sBAAsB;QAC3D,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,EAAE,EAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACtC,CAAC;IACL,CAAC;IAED,8CAAa,GAAb,UAAc,MAAoB;QAAlC,iBA4BC;QA3BC,MAAM,CAAC,IAAI,GAAC,IAAI,CAAC,IAAI,CAAC;QACtB,MAAM,CAAC,KAAK,GAAC,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC;aAC9B,SAAS,CAAC,cAAI;YACb,+DAA+D;YAC/D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,8BAA8B;YAC9B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,EAAE,EAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAC;gBACpB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACtC,CAAC;YACD,IAAI,CAAC,EAAE,EAAC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,IAAE,CAAC,CAAC,EAAC;gBACjC,cAAc,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;gBAC7C,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxD,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxD,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACrC,CAAC;YACD,IAAI,CAAC,EAAE,EAAC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,IAAE,CAAC,CAAC,EAAC;gBACjC,cAAc,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;gBAC7C,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;gBACxC,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxD,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxD,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;YAC1C,CAAC;QACJ,CAAC,EACD,eAAK,IAAI,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC3B,CAAC;IACF,CAAC;IAhDU,sBAAsB;QANlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;YAG9B,UAAU,EAAE,CAAC,2EAAgB,EAAE,CAAC;SACjC,CAAC;yCAQ2B,sDAAM,EAAuB,4EAAoB;OAPjE,sBAAsB,CAkDlC;IAAD,6BAAC;CAAA;AAlDkC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbM;AACM;AACmB;AAEW;AACT;AACzB;AAY3C;IAAA;IAAmC,CAAC;IAAvB,mBAAmB;QAV/B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,wDAAU;gBACV,yFAA0B;aAC3B;YACD,YAAY,EAAE,CAAC,gFAAsB,CAAC;SACvC,CAAC;OACW,mBAAmB,CAAI;IAAD,0BAAC;CAAA;AAAJ;;;;;;;;;;;;;;AClBhC;AAAA;IAEI,sBACW,IAAY,EACZ,KAAa,EACb,QAAgB,EAChB,SAAiB;QAHjB,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,cAAS,GAAT,SAAS,CAAQ;IACvB,CAAC;IAER,mBAAC;AAAD,CAAC","file":"reset-password-reset-password-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable} from 'rxjs';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { userPassword } from './reset-password/userPassword'; \nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResetPasswordService {\n\n  constructor(private _http : Http) { }\n\n  reset(person): Observable<userPassword>{\n \n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n  \n    return this._http.post(\n      \"http://localhost/php_api/resetpassword.php\",\n      person,\n      options\n    ).pipe(map((res: Response) => res.json()));\n  }\n}\n ","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ResetPasswordComponent } from './reset-password.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: ResetPasswordComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ResetPasswordRoutingModule {\r\n}\r\n","module.exports = \"<div class=\\\"login-page\\\" [@routerTransition]>\\n\\n<div class=\\\"row justify-content-md-center\\\">\\n  <div class=\\\"col-md-4\\\">\\n      <img class=\\\"user-avatar\\\" src=\\\"http://apparel.idw-quickselect.com/wp-content/uploads/sites/3/2017/06/Artboard-1.png\\\" width=\\\"250px\\\" class=\\\"user-avatar1\\\" />\\n      <h1>Reset Password</h1>\\n      <form #resetForm=\\\"ngForm\\\"(ngSubmit)=\\\"resetPassword(resetForm.value)\\\" autocomplete=\\\"off\\\"> \\n          <div class=\\\"form-content\\\">\\n\\n              <div ngModelGroup=\\\"password\\\" #userPassword=\\\"ngModelGroup\\\" required >\\n                      <div class=\\\"form-group\\\">\\n                        \\n                        <input type=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" class=\\\"form-control input-underline input-lg\\\"\\n                          id=\\\"inputPassword\\\" placeholder=\\\"Password\\\"\\n                          minlength =\\\"8\\\" required>\\n                      </div>\\n                   \\n                      <div class=\\\"form-group\\\">\\n                        \\n                        <input type=\\\"password\\\" class=\\\"form-control input-underline input-lg\\\"\\n                        [(ngModel)]=\\\"model.password2\\\" name=\\\"password2\\\"\\n                          id=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\n                      </div>\\n                       \\n                       \\n                      <div *ngIf=\\\"(userPassword.invalid|| userPassword.value?.password != userPassword.value?.password2) && (userPassword.touched)\\\"\\n                      class=\\\"alert alert-danger\\\">\\n                       \\n                      <div *ngIf = \\\"userPassword.invalid; else nomatch\\\">\\n                          Password needs to be more than 8 characters\\n                      </div>\\n                          <ng-template #nomatch >\\n                          Passwords don't match\\n                          </ng-template>\\n                      </div>\\n                  </div>                            \\n          </div>\\n          <button class=\\\"btn rounded-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!resetForm.form.valid\\\"> Reset Password </button>&nbsp;\\n          <a class=\\\"btn rounded-btn\\\" [routerLink]=\\\"['/login']\\\"> Log in </a> \\n      </form>\\n  </div>\\n</div>\\n</div>\\n\"","module.exports = \":host {\\n  display: block; }\\n\\n.login-page {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: auto;\\n  background: #222;\\n  text-align: center;\\n  color: #fff;\\n  padding: 3em; }\\n\\n.login-page .col-lg-4 {\\n    padding: 0; }\\n\\n.login-page .input-lg {\\n    height: 46px;\\n    padding: 10px 16px;\\n    font-size: 18px;\\n    line-height: 1.3333333;\\n    border-radius: 0; }\\n\\n.login-page .input-underline {\\n    background: 0 0;\\n    border: none;\\n    box-shadow: none;\\n    border-bottom: 2px solid rgba(255, 255, 255, 0.5);\\n    color: #fff;\\n    border-radius: 0; }\\n\\n.login-page .input-underline:focus {\\n    border-bottom: 2px solid #fff;\\n    box-shadow: none; }\\n\\n.login-page .rounded-btn {\\n    border-radius: 50px;\\n    color: rgba(255, 255, 255, 0.8);\\n    background: #222;\\n    border: 2px solid rgba(255, 255, 255, 0.8);\\n    font-size: 18px;\\n    line-height: 40px;\\n    padding: 0 25px; }\\n\\n.login-page .rounded-btn:hover,\\n  .login-page .rounded-btn:focus,\\n  .login-page .rounded-btn:active,\\n  .login-page .rounded-btn:visited {\\n    color: white;\\n    border: 2px solid white;\\n    outline: none; }\\n\\n.login-page h1 {\\n    font-weight: 300;\\n    margin-top: 20px;\\n    margin-bottom: 10px;\\n    font-size: 36px; }\\n\\n.login-page h1 small {\\n      color: rgba(255, 255, 255, 0.7); }\\n\\n.login-page .form-group {\\n    padding: 8px 0; }\\n\\n.login-page .form-group input::-webkit-input-placeholder {\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-group input:-moz-placeholder {\\n      /* Firefox 18- */\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-group input::-moz-placeholder {\\n      /* Firefox 19+ */\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-group input:-ms-input-placeholder {\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-content {\\n    padding: 40px 0; }\\n\\n.login-page .user-avatar {\\n    border-radius: 50%;\\n    border: 2px solid #fff; }\\n\\n.login-page .user-avatar1 {\\n    border-radius: 1%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../router.animations';\nimport { ResetPasswordService} from '../reset-password.service';\nimport { Router } from '@angular/router';\n\nimport { userPassword } from './userPassword'; \n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n  animations: [routerTransition()] \n})\nexport class ResetPasswordComponent implements OnInit {\n\n  myData:any;\n  public uuid:string;\n  public email:string;\n  model = new userPassword('','','','');//get form control\n\n  constructor(public router: Router,private resetService: ResetPasswordService) { }\n\n  ngOnInit() {\n    var url_string = window.location.href; //window.location.href\n      var url = new URL(url_string);\n      this.email = url.searchParams.get(\"email\");\n      this.uuid = url.searchParams.get(\"uuid\");\n      console.log(this.uuid);\n      if(!this.email && !this.uuid){      \n        this.router.navigateByUrl('/error');\n      }\n  }\n\n  resetPassword(person: userPassword){\n    person.uuid=this.uuid;\n    person.email=this.email;\n    this.resetService.reset(person)\n    .subscribe(user => {\n      // show an alert to tell the user if product was created or not\n      console.log(user);\n      // go back to list of products\n      this.myData = user; \n      if(this.myData.error){\n        this.router.navigateByUrl('/error');\n      }\n      else if(this.myData.user.admin==0){\n        sessionStorage.setItem('isLoggedin', 'true');\n        sessionStorage.setItem('fname', this.myData.user.fname);\n        sessionStorage.setItem('lname', this.myData.user.lname);\n        this.router.navigateByUrl('/home');\n      }\n      else if(this.myData.user.admin==1){\n        sessionStorage.setItem('isLoggedin', 'true');\n        sessionStorage.setItem('admin', 'true');\n        sessionStorage.setItem('fname', this.myData.user.fname);\n        sessionStorage.setItem('lname', this.myData.user.lname);\n        this.router.navigateByUrl('/dashboard');\n      }\n   },\n   error => console.log(error)\n  );\n  }\n\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\n\nimport { ResetPasswordRoutingModule } from './reset-password-routing.module';\nimport { ResetPasswordComponent } from './reset-password.component';\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    ResetPasswordRoutingModule \n  ],\n  declarations: [ResetPasswordComponent]\n})\nexport class ResetPasswordModule { }\n","export class userPassword {\r\n\r\n    constructor(\r\n        public uuid: string,\r\n        public email: string,\r\n        public password: string,\r\n        public password2: string\r\n    ) {  }\r\n  \r\n  }"],"sourceRoot":""}