{"version":3,"sources":["webpack:///./src/app/register.service.ts","webpack:///./src/app/signup/newUser.ts","webpack:///./src/app/signup/signup-routing.module.ts","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.scss","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/signup/signup.module.ts"],"names":[],"mappings":"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","file":"signup-signup-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable} from 'rxjs';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { newUser} from './signup/newUser';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n\r\n  constructor(private _http : Http) { }\r\n\r\n  register(person): Observable<newUser>{\r\n \r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n  \r\n    return this._http.post(\r\n      \"http://localhost/php_api/liveregister.php\",\r\n      person,\r\n      options\r\n    ).pipe(map((res: Response) => res.json()));\r\n  }\r\n}\r\n ","export class newUser {\r\n\r\n    constructor(\r\n        public uuid: string,\r\n        public fname: string,\r\n        public lname: string,\r\n        public email: string,\r\n        public password: string,\r\n        public password2: string,\r\n        public company: string,\r\n        public phone: string,\r\n        public admin:number\r\n    ) {  }\r\n  \r\n  }","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignupComponent } from './signup.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: SignupComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class SignupRoutingModule {\r\n}\r\n","module.exports = \"<div class=\\\"login-page\\\" [@routerTransition]>\\r\\n\\r\\n        <div *ngIf=\\\"myData\\\">\\r\\n                <div *ngIf=\\\"myData.error==false; else loginerror\\\">\\r\\n                    <div *ngIf=\\\"myData.user.Admin==1; else regularUser\\\">\\r\\n                      <h2>Welcome Admin {{myData.user.fname}} {{myData.user.lname}}</h2>\\r\\n                    </div>\\r\\n                    <ng-template #regularUser>\\r\\n                      <h2>Welcome User {{myData.user.fname}} {{myData.user.lname}}</h2>\\r\\n                    </ng-template>\\r\\n                </div>\\r\\n                <ng-template #loginerror><h2>{{myData.error_msg}} </h2></ng-template>\\r\\n              </div>\\r\\n\\r\\n    <div class=\\\"row justify-content-md-center\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <img class=\\\"user-avatar\\\" src=\\\"http://apparel.idw-quickselect.com/wp-content/uploads/sites/3/2017/06/Artboard-1.png\\\" width=\\\"250px\\\" class=\\\"user-avatar1\\\" />\\r\\n            <h1>Registration</h1>\\r\\n            <form #newuserForm=\\\"ngForm\\\"(ngSubmit)=\\\"userRegister(newuserForm.value)\\\" autocomplete=\\\"off\\\"> \\r\\n                <div class=\\\"form-content\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input name=\\\"fname\\\" [(ngModel)]=\\\"model.fname\\\" #signupfname=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control input-underline input-lg\\\" id=\\\"fname\\\" placeholder=\\\"First Name\\\" required>\\r\\n                    </div>                    \\r\\n                    <div *ngIf=\\\"signupfname.invalid && (signupfname.dirty || signupfname.touched)\\\" class=\\\"alert alert-danger\\\">   \\r\\n                            <div *ngIf=\\\"signupfname.errors.required\\\">First Name is required.</div> \\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input name=\\\"lname\\\" [(ngModel)]=\\\"model.lname\\\" #signuplname=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control input-underline input-lg\\\" id=\\\"lname\\\" placeholder=\\\"Last Name\\\" required>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"signuplname.invalid && (signuplname.dirty || signuplname.touched)\\\" class=\\\"alert alert-danger\\\">   \\r\\n                            <div *ngIf=\\\"signuplname.errors.required\\\">Last Name is required.</div> \\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input name=\\\"company\\\" [(ngModel)]=\\\"model.company\\\" #signupcompany=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control input-underline input-lg\\\" id=\\\"company\\\" placeholder=\\\"Company Name\\\" required>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"signupcompany.invalid && (signupcompany.dirty || signupcompany.touched)\\\" class=\\\"alert alert-danger\\\">   \\r\\n                            <div *ngIf=\\\"signupcompany.errors.required\\\">Company Name is required.</div> \\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                            <input name=\\\"phone\\\" [(ngModel)]=\\\"model.phone\\\" #signupphone=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control input-underline input-lg\\\" id=\\\"phone\\\" placeholder=\\\"Phone\\\" required>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"signupphone.invalid && (signupphone.dirty || signupphone.touched)\\\" class=\\\"alert alert-danger\\\">   \\r\\n                            <div *ngIf=\\\"signupphone.errors.required\\\">Company Name is required.</div> \\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" type=\\\"text\\\" class=\\\"form-control input-underline input-lg\\\" id=\\\"email\\\" placeholder=\\\"Email\\\" readonly>\\r\\n                    </div>           \\r\\n\\r\\n\\r\\n                    <div ngModelGroup=\\\"password\\\" #userPassword=\\\"ngModelGroup\\\" required >\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              \\r\\n                              <input type=\\\"password\\\"\\r\\n                              [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" class=\\\"form-control input-underline input-lg\\\"\\r\\n                                id=\\\"inputPassword\\\" placeholder=\\\"Password\\\"\\r\\n                                minlength =\\\"8\\\" required>\\r\\n                            </div>\\r\\n                         \\r\\n                            <div class=\\\"form-group\\\">\\r\\n                              \\r\\n                              <input type=\\\"password\\\" class=\\\"form-control input-underline input-lg\\\"\\r\\n                              [(ngModel)]=\\\"model.password2\\\" name=\\\"password2\\\"\\r\\n                                id=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\r\\n                            </div>\\r\\n                             \\r\\n                             \\r\\n                            <div *ngIf=\\\"(userPassword.invalid|| userPassword.value?.password != userPassword.value?.password2) && (userPassword.touched)\\\"\\r\\n                            class=\\\"alert alert-danger\\\">\\r\\n                             \\r\\n                            <div *ngIf = \\\"userPassword.invalid; else nomatch\\\">\\r\\n                                Password needs to be more than 8 characters\\r\\n                            </div>\\r\\n                                <ng-template #nomatch >\\r\\n                                Passwords don't match\\r\\n                                </ng-template>\\r\\n                            </div>\\r\\n                        </div>                            \\r\\n                </div>\\r\\n                <button class=\\\"btn rounded-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!newuserForm.form.valid\\\"> Register </button>&nbsp;\\r\\n                <a class=\\\"btn rounded-btn\\\" [routerLink]=\\\"['/login']\\\"> Log in </a> \\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \":host {\\n  display: block; }\\n\\n.login-page {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: auto;\\n  background: #222;\\n  text-align: center;\\n  color: #fff;\\n  padding: 3em; }\\n\\n.login-page .col-lg-4 {\\n    padding: 0; }\\n\\n.login-page .input-lg {\\n    height: 46px;\\n    padding: 10px 16px;\\n    font-size: 18px;\\n    line-height: 1.3333333;\\n    border-radius: 0; }\\n\\n.login-page .input-underline {\\n    background: 0 0;\\n    border: none;\\n    box-shadow: none;\\n    border-bottom: 2px solid rgba(255, 255, 255, 0.5);\\n    color: #fff;\\n    border-radius: 0; }\\n\\n.login-page .input-underline:focus {\\n    border-bottom: 2px solid #fff;\\n    box-shadow: none; }\\n\\n.login-page .rounded-btn {\\n    border-radius: 50px;\\n    color: rgba(255, 255, 255, 0.8);\\n    background: #222;\\n    border: 2px solid rgba(255, 255, 255, 0.8);\\n    font-size: 18px;\\n    line-height: 40px;\\n    padding: 0 25px; }\\n\\n.login-page .rounded-btn:hover,\\n  .login-page .rounded-btn:focus,\\n  .login-page .rounded-btn:active,\\n  .login-page .rounded-btn:visited {\\n    color: white;\\n    border: 2px solid white;\\n    outline: none; }\\n\\n.login-page h1 {\\n    font-weight: 300;\\n    margin-top: 20px;\\n    margin-bottom: 10px;\\n    font-size: 36px; }\\n\\n.login-page h1 small {\\n      color: rgba(255, 255, 255, 0.7); }\\n\\n.login-page .form-group {\\n    padding: 8px 0; }\\n\\n.login-page .form-group input::-webkit-input-placeholder {\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-group input:-moz-placeholder {\\n      /* Firefox 18- */\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-group input::-moz-placeholder {\\n      /* Firefox 19+ */\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-group input:-ms-input-placeholder {\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-content {\\n    padding: 40px 0; }\\n\\n.login-page .user-avatar {\\n    border-radius: 50%;\\n    border: 2px solid #fff; }\\n\\n.login-page .user-avatar1 {\\n    border-radius: 1%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { routerTransition } from '../router.animations';\r\nimport { RegisterService } from '../register.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { newUser }    from './newUser';\r\n\r\n@Component({\r\n    selector: 'app-signup',\r\n    templateUrl: './signup.component.html',\r\n    styleUrls: ['./signup.component.scss'],\r\n    animations: [routerTransition()] \r\n})\r\nexport class SignupComponent implements OnInit {\r\n    constructor(public router: Router,private registerService: RegisterService) {}\r\n    myData:any;\r\n    public uuid:string;\r\n    // @Input() useremail: string = 'email';\r\n    model = new newUser('','','','','','','','',0);//get form control\r\n\r\n    ngOnInit() {\r\n      var url_string = window.location.href; //window.location.href\r\n      var url = new URL(url_string);\r\n      var email = url.searchParams.get(\"email\");\r\n      this.uuid = url.searchParams.get(\"uuid\");\r\n      console.log(this.uuid);\r\n      if(email){\r\n      this.model= new newUser('','','',email,'','','','',0);\r\n      }\r\n      else{\r\n        this.router.navigateByUrl('/error');\r\n      }\r\n    }\r\n\r\n    userRegister(person: newUser){\r\n        person.admin=0;\r\n        person.uuid=this.uuid;\r\n        this.registerService.register(person)\r\n        .subscribe(user => {\r\n          // show an alert to tell the user if product was created or not\r\n          console.log(user);\r\n          // go back to list of products\r\n          this.myData = user; \r\n          if(this.myData.error){\r\n            this.router.navigateByUrl('/access-denied');\r\n          }\r\n          else if(this.myData.user.admin==0){\r\n            sessionStorage.setItem('isLoggedin', 'true');\r\n            sessionStorage.setItem('fname', this.myData.user.fname);\r\n            sessionStorage.setItem('lname', this.myData.user.lname);\r\n            this.router.navigateByUrl('/home');\r\n          }\r\n          else if(this.myData.user.admin==1){\r\n            sessionStorage.setItem('isLoggedin', 'true');\r\n            sessionStorage.setItem('admin', 'true');\r\n            sessionStorage.setItem('fname', this.myData.user.fname);\r\n            sessionStorage.setItem('lname', this.myData.user.lname);\r\n            this.router.navigateByUrl('/dashboard');\r\n          }\r\n       },\r\n       error => console.log(error)\r\n      );\r\n      }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { SignupRoutingModule } from './signup-routing.module';\r\nimport { SignupComponent } from './signup.component';\r\nimport { HttpModule } from '@angular/http';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SignupRoutingModule,\r\n    HttpModule\r\n  ],\r\n  declarations: [SignupComponent]\r\n})\r\nexport class SignupModule { }\r\n"],"sourceRoot":""}