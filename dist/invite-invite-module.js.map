{"version":3,"sources":["webpack:///./src/app/layout/invite.service.ts","webpack:///./src/app/layout/invite/invite-routing.module.ts","webpack:///./src/app/layout/invite/invite.component.html","webpack:///./src/app/layout/invite/invite.component.scss","webpack:///./src/app/layout/invite/invite.component.ts","webpack:///./src/app/layout/invite/invite.module.ts"],"names":[],"mappings":"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","file":"invite-invite-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable} from 'rxjs';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { InviteUser} from './invite/invite.component';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InviteService {\n\n  constructor(private _http : Http) { } \n\n  invite(person): Observable<InviteUser>{\n \n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n  \n    return this._http.post(\n      \"http://localhost/php_api/invite.php\",\n      person,\n      options\n    ).pipe(map((res: Response) => res.json()));\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { InviteComponent } from './invite.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: InviteComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class InviteRoutingModule {\r\n}\r\n","module.exports = \"\\n<div class=\\\"invite-page\\\" [@routerTransition]>\\n        <app-page-header [heading]=\\\"'Invite'\\\" [icon]=\\\"'fa-envelope'\\\"></app-page-header>\\n    <div class=\\\"row justify-content-md-center\\\">\\n        <div class=\\\"col-md-4\\\"> \\n        <div *ngIf=\\\"myData\\\">\\n                <div *ngIf=\\\"myData.error==false; else inviteerror\\\">\\n                        <ngb-alert type=\\\"success\\\" *ngIf=\\\"!closed\\\" (close)=\\\"closed=true\\\">The Customer has been Invited.</ngb-alert>                  \\n                </div>\\n                <ng-template #inviteerror>\\n                        <ngb-alert type=\\\"danger\\\" *ngIf=\\\"!closed\\\" (close)=\\\"closed=true\\\">{{myData.error_msg}}</ngb-alert> \\n                </ng-template>\\n        </div>\\n        \\n    </div>\\n  </div>\\n<div class=\\\"row justify-content-md-center\\\">\\n    <div class=\\\"col-md-4\\\">        \\n        <h1>Invite Customer</h1><br>\\n        <form #InviteForm=\\\"ngForm\\\" (ngSubmit)=\\\"userInvite(InviteForm.value); InviteForm.reset() \\\">   \\n            <div class=\\\"form-content\\\">\\n                <div class=\\\"form-group\\\">\\n                    <input name=\\\"email\\\" email #invitemail=\\\"ngModel\\\" [(ngModel)]=\\\"email\\\" class=\\\"form-control input-underline input-lg\\\" id=\\\"email\\\" placeholder=\\\"Email\\\" required>\\n                </div>   \\n                <div *ngIf=\\\"invitemail.invalid && (invitemail.dirty || invitemail.touched)\\\" class=\\\"alert alert-danger\\\">   \\n                <div *ngIf=\\\"invitemail.errors.required\\\">Email is required.</div>    \\n                <div *ngIf=\\\"invitemail.errors.email\\\">Email is not valid.</div>   \\n                </div>  \\n            </div>\\n            <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!InviteForm.form.valid\\\"> Invite </button>          \\n        </form>\\n    </div>\\n</div>\\n\\n</div>\\n\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { routerTransition } from '../../router.animations';\nimport { InviteService } from '../invite.service'; \n\n@Component({\n  selector: 'app-invite',\n  templateUrl: './invite.component.html',\n  styleUrls: ['./invite.component.scss'],\n  animations: [routerTransition()]\n})\nexport class InviteComponent implements OnInit {\n\n  constructor(public router: Router,\n              private inviteService: InviteService) { }\n      myData:any;\n      public closed = false;  \n\n  ngOnInit() {}\n\n  userInvite(person: InviteUser){\n   this.closed = false; \n   person.inviteid=sessionStorage.getItem(\"uuid\").toString();; \n\n    this.inviteService.invite(person)\n    .subscribe(user => {\n      // show an alert to tell the user if user was invited\n      console.log(user);\n\n      // go back to list of products\n      this.myData = user; \n      // if(this.myData.error){\n      //   this.router.navigateByUrl('/error');\n      // }\n      // else if(this.myData.user.Admin==0){\n      //   sessionStorage.setItem('isLoggedin', 'true');\n      //   sessionStorage.setItem('fname', this.myData.user['First Name']);\n      //   sessionStorage.setItem('lname', this.myData.user['Last Name']);\n      //   this.router.navigateByUrl('/dashboard');\n      // }     \n   },\n   error => console.log(error)\n  );\n  }\n\n}\n \nexport interface InviteUser {  \n  email: string;\n  inviteid: string;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms'; \nimport { NgbCarouselModule, NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { InviteRoutingModule } from './invite-routing.module';\nimport { InviteComponent } from './invite.component';\nimport { PageHeaderModule } from '../../shared';\n\n\n\n@NgModule({\n  imports: [CommonModule, FormsModule,\n    ReactiveFormsModule,    \n    NgbCarouselModule.forRoot(),\n    NgbAlertModule.forRoot(),\n    InviteRoutingModule, PageHeaderModule],\n    declarations: [InviteComponent]\n  \n})\nexport class InviteModule { } \n"],"sourceRoot":""}