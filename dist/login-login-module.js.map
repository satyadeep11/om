{"version":3,"sources":["webpack:///./src/app/auth.service.ts","webpack:///./src/app/login/forgot-password/forgot-password.component.html","webpack:///./src/app/login/forgot-password/forgot-password.component.scss","webpack:///./src/app/login/forgot-password/forgot-password.component.ts","webpack:///./src/app/login/forgot.service.ts","webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable} from 'rxjs';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Person} from './login/login.component';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private _http : Http) { }\r\n\r\n  login(person): Observable<Person>{\r\n \r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n  \r\n    return this._http.post(\r\n      \"http://localhost/php_api/login.php\",\r\n      person,\r\n      options\r\n    ).pipe(map((res: Response) => res.json()));\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row justify-content-md-center\\\">\\r\\n  <div class=\\\"col-md-12\\\"> \\r\\n  <div *ngIf=\\\"myData\\\">\\r\\n          <div *ngIf=\\\"myData.error==false; else forgoterror\\\">\\r\\n                  <ngb-alert type=\\\"success\\\" *ngIf=\\\"!closed\\\" (close)=\\\"closed=true\\\">A reset email has been sent to your email. Follow Instructions.</ngb-alert>                  \\r\\n          </div>\\r\\n          <ng-template #forgoterror>\\r\\n                  <ngb-alert type=\\\"danger\\\" *ngIf=\\\"!closed\\\" (close)=\\\"closed=true\\\">{{myData.error_msg}}</ngb-alert> \\r\\n          </ng-template>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n</div>\\r\\n<div class=\\\"row justify-content-md-center\\\">\\r\\n<div class=\\\"col-md-6\\\">        \\r\\n  <h4>Enter Email</h4><br>\\r\\n  <form #ForgotForm=\\\"ngForm\\\" (ngSubmit)=\\\"userForgot(ForgotForm.value); ForgotForm.reset() \\\">   \\r\\n      <div class=\\\"form-content\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <input name=\\\"email\\\" email #forgotmail=\\\"ngModel\\\" [(ngModel)]=\\\"email\\\" class=\\\"form-control input-underline input-lg\\\" id=\\\"email\\\" placeholder=\\\"Email\\\" required>\\r\\n          </div>   \\r\\n          <div *ngIf=\\\"forgotmail.invalid && (forgotmail.dirty || forgotmail.touched)\\\" class=\\\"alert alert-danger\\\">   \\r\\n          <div *ngIf=\\\"forgotmail.errors.required\\\">Email is required.</div>    \\r\\n          <div *ngIf=\\\"forgotmail.errors.email\\\">Email is not valid.</div>   \\r\\n          </div>  \\r\\n      </div>\\r\\n      <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!ForgotForm.form.valid\\\"> Reset Password </button>          \\r\\n  </form>\\r\\n</div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ForgotService } from '../forgot.service'; \r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  constructor(private forgotService: ForgotService) { }\r\n  myData:any;\r\n  public closed = false;\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  userForgot(person: ForgotUser){\r\n    this.closed = false;      \r\n \r\n     this.forgotService.forgot(person)\r\n     .subscribe(user => {\r\n       console.log(user);\r\n       this.myData = user;\r\n    },\r\n    error => console.log(error)\r\n   );\r\n   }\r\n\r\n}\r\n\r\nexport interface ForgotUser {  \r\n  email: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable} from 'rxjs';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { ForgotUser} from './forgot-password/forgot-password.component';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ForgotService {\r\n\r\n  constructor(private _http : Http) { }\r\n\r\n  forgot(person): Observable<ForgotUser>{\r\n \r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n  \r\n    return this._http.post(\r\n      \"http://localhost/php_api/forgot.php\",\r\n      person,\r\n      options\r\n    ).pipe(map((res: Response) => res.json()));\r\n  }\r\n} \r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LoginComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule {}\r\n","module.exports = \"<div class=\\\"login-page\\\" [@routerTransition]>\\r\\n\\r\\n        \\r\\n\\r\\n    <div class=\\\"row justify-content-md-center\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n                <div *ngIf=\\\"myData\\\">\\r\\n                        <div *ngIf=\\\"myData.error==false; else loginerror\\\">\\r\\n                            <div *ngIf=\\\"myData.user.Admin==1; else regularUser\\\">\\r\\n                              <h2>Welcome Admin {{myData.user[\\\"First Name\\\"]}} {{myData.user[\\\"Last Name\\\"]}}</h2>\\r\\n                            </div>\\r\\n                            <ng-template #regularUser>\\r\\n                              <h2>Welcome User {{myData.user[\\\"First Name\\\"]}} {{myData.user[\\\"Last Name\\\"]}}</h2>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                        \\r\\n                        <ng-template #loginerror ><div class=\\\"alert alert-danger\\\"><h2>{{myData.error_msg}} </h2></div></ng-template>\\r\\n                        \\r\\n                      </div>\\r\\n            <img src=\\\"http://apparel.idw-quickselect.com/wp-content/uploads/sites/3/2017/06/Artboard-1.png\\\" width=\\\"250px\\\" class=\\\"user-avatar1\\\" />\\r\\n            <h1>Login</h1>\\r\\n            <form #LoginForm=\\\"ngForm\\\"(ngSubmit)=\\\"userLogin(LoginForm.value)\\\">   \\r\\n                <div class=\\\"form-content\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input name=\\\"email\\\" email #loginmail=\\\"ngModel\\\" [(ngModel)]=\\\"email\\\" class=\\\"form-control input-underline input-lg\\\" id=\\\"email\\\" placeholder=\\\"Email\\\" required>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"loginmail.invalid && (loginmail.dirty || loginmail.touched)\\\" class=\\\"alert alert-danger\\\">   \\r\\n                            <div *ngIf=\\\"loginmail.errors.required\\\">Email is required.</div>    \\r\\n                            <div *ngIf=\\\"loginmail.errors.email\\\">Email is not valid.</div>  \\r\\n                    </div>        \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input name=\\\"password\\\" type=\\\"password\\\" #loginpass=\\\"ngModel\\\" [(ngModel)]=\\\"password\\\" class=\\\"form-control input-underline input-lg\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" required>\\r\\n                        <div *ngIf=\\\"loginpass.invalid && (loginpass.dirty || loginpass.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                <div *ngIf=\\\"loginpass.errors.required\\\">Password is required.</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <button class=\\\"btn rounded-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!LoginForm.form.valid\\\"> Log in </button><br><br><br>\\r\\n            </form>\\r\\n\\r\\n            <a (click)=\\\"forgotPassword();\\\" [routerLink]=\\\"\\\"> Forgot Password </a> \\r\\n                <br><br>\\r\\n                <app-forgot-password *ngIf=\\\"loadComponent\\\"></app-forgot-password>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \":host {\\n  display: block; }\\n\\n.login-page {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: auto;\\n  background: #222;\\n  text-align: center;\\n  color: #fff;\\n  padding: 3em; }\\n\\n.login-page .col-lg-4 {\\n    padding: 0; }\\n\\n.login-page .input-lg {\\n    height: 46px;\\n    padding: 10px 16px;\\n    font-size: 18px;\\n    line-height: 1.3333333;\\n    border-radius: 0; }\\n\\n.login-page .input-underline {\\n    background: 0 0;\\n    border: none;\\n    box-shadow: none;\\n    border-bottom: 2px solid rgba(255, 255, 255, 0.5);\\n    color: #fff;\\n    border-radius: 0; }\\n\\n.login-page .input-underline:focus {\\n    border-bottom: 2px solid #fff;\\n    box-shadow: none; }\\n\\n.login-page .rounded-btn {\\n    border-radius: 50px;\\n    color: rgba(255, 255, 255, 0.8);\\n    background: #222;\\n    border: 2px solid rgba(255, 255, 255, 0.8);\\n    font-size: 18px;\\n    line-height: 40px;\\n    padding: 0 25px; }\\n\\n.login-page .rounded-btn:hover,\\n  .login-page .rounded-btn:focus,\\n  .login-page .rounded-btn:active,\\n  .login-page .rounded-btn:visited {\\n    color: white;\\n    border: 2px solid white;\\n    outline: none; }\\n\\n.login-page h1 {\\n    font-weight: 300;\\n    margin-top: 20px;\\n    margin-bottom: 10px;\\n    font-size: 36px; }\\n\\n.login-page h1 small {\\n      color: rgba(255, 255, 255, 0.7); }\\n\\n.login-page .form-group {\\n    padding: 8px 0; }\\n\\n.login-page .form-group input::-webkit-input-placeholder {\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-group input:-moz-placeholder {\\n      /* Firefox 18- */\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-group input::-moz-placeholder {\\n      /* Firefox 19+ */\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-group input:-ms-input-placeholder {\\n      color: rgba(255, 255, 255, 0.6) !important; }\\n\\n.login-page .form-content {\\n    padding: 40px 0; }\\n\\n.login-page .user-avatar {\\n    border-radius: 50%;\\n    border: 2px solid #fff; }\\n\\n.login-page .user-avatar1 {\\n    border-radius: 1%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { routerTransition } from '../router.animations';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss'],\r\n    animations: [routerTransition()]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    constructor(public router: Router,\r\n        private authService: AuthService) {}\r\n    myData:any;\r\n    loadComponent = false;\r\n    ngOnInit() {\r\n      if(sessionStorage.getItem(\"isLoggedin\")){\r\n        if(sessionStorage.getItem(\"admin\")){\r\n          this.router.navigateByUrl('/dashboard');\r\n        }\r\n        else{\r\n          this.router.navigateByUrl('/home');\r\n        }\r\n      \r\n      }\r\n    }\r\n\r\n    onLoggedin(email:string,password:string) {\r\n        this.router.navigateByUrl('/access-denied');//place login logic here\r\n        //sessionStorage.setItem('isLoggedin', 'true');\r\n        console.log(email);\r\n       \r\n    }\r\n    userLogin(person: Person){\r\n        this.authService.login(person)\r\n        .subscribe(user => {\r\n          // show an alert to tell the user if product was created or not\r\n          console.log(user);\r\n    \r\n          // go back to list of products\r\n          this.myData = user; \r\n          if(this.myData.error){\r\n            console.log(\"Login Error\");\r\n          }\r\n          else if(this.myData.user.Admin==0){\r\n            sessionStorage.setItem('isLoggedin', 'true');\r\n            sessionStorage.setItem('fname', this.myData.user['First Name']);\r\n            sessionStorage.setItem('lname', this.myData.user['Last Name']);\r\n            sessionStorage.setItem('uuid', this.myData.uuid);\r\n            this.router.navigateByUrl('/home');\r\n          }\r\n          else if(this.myData.user.Admin==1){\r\n            sessionStorage.setItem('isLoggedin', 'true');\r\n            sessionStorage.setItem('admin', 'true');\r\n            sessionStorage.setItem('fname', this.myData.user['First Name']);\r\n            sessionStorage.setItem('lname', this.myData.user['Last Name']);\r\n            sessionStorage.setItem('uuid', this.myData.uuid);\r\n            this.router.navigateByUrl('/dashboard');\r\n          }\r\n       },\r\n       error => console.log(error)\r\n      );\r\n      }\r\n      forgotPassword() {\r\n          if(this.loadComponent == true)\r\n        this.loadComponent = false;  \r\n        else      \r\n        this.loadComponent = true;\r\n      }\r\n      \r\n}\r\nexport interface Person {\r\n  \r\n    email: string;\r\n    password: string;\r\n  }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms'; \r\nimport { NgbCarouselModule, NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule,    \r\n    NgbCarouselModule.forRoot(),\r\n    NgbAlertModule.forRoot(),\r\n    ReactiveFormsModule,LoginRoutingModule],\r\n    declarations: [LoginComponent, ForgotPasswordComponent]\r\n})\r\nexport class LoginModule {} \r\n"],"sourceRoot":""}