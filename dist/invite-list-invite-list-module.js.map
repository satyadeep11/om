{"version":3,"sources":["webpack:///./src/app/layout/invite-list.service.ts","webpack:///./src/app/layout/invite-list/invite-list-routing.module.ts","webpack:///./src/app/layout/invite-list/invite-list.component.html","webpack:///./src/app/layout/invite-list/invite-list.component.scss","webpack:///./src/app/layout/invite-list/invite-list.component.ts","webpack:///./src/app/layout/invite-list/invite-list.module.ts"],"names":[],"mappings":"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","file":"invite-list-invite-list-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable} from 'rxjs';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { InviteUserList} from './invite-list/invite-list.component';\nimport { EmailString,CustomerUID} from './invite-list/invite-list.component';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InviteListService {\n\n  constructor(private _http : Http) { }\n\n  invitelist(): Observable<InviteUserList>{\n \n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n  \n    return this._http.post(\n      \"http://localhost/php_api/invite-list.php\",\n      options\n    ).pipe(map((res: Response) => res.json()));\n  }\n\n  pendinglist(): Observable<InviteUserList>{\n \n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n  \n    return this._http.post(\n      \"http://localhost/php_api/invite-pending-list.php\",\n      options\n    ).pipe(map((res: Response) => res.json()));\n  }\n\n  acceptedlist(): Observable<InviteUserList>{\n \n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n  \n    return this._http.post(\n      \"http://localhost/php_api/invite-accepted-list.php\",\n      options\n    ).pipe(map((res: Response) => res.json()));\n  }\n\n  searchlist(email): Observable<EmailString>{\n \n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n  \n    return this._http.post(\n      \"http://localhost/php_api/invite-single-user.php\",\n      email,\n      options\n    ).pipe(map((res: Response) => res.json()));\n  }\n  deleteuser(customerid:CustomerUID): Observable<CustomerUID>{\n \n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    headers.append('customerid',customerid.toString()); \n    let options = new RequestOptions({ headers: headers });\n  \n    return this._http.post(\n      \"http://localhost/php_api/delete-single-user.php\",\n      \n      options\n    ).pipe(map((res: Response) => res.json()));\n  }\n} \n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { InviteListComponent } from './invite-list.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: InviteListComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class InviteListRoutingModule {\r\n}\r\n","module.exports = \"\\r\\n<div class=\\\"invite-list-page\\\" [@routerTransition]>\\r\\n<app-page-header [heading]=\\\"'Customer List'\\\" [icon]=\\\"'fa-search'\\\"></app-page-header>\\r\\n  <div class=\\\"row justify-content-md-center\\\">\\r\\n      <div class=\\\"col-md-5\\\"> \\r\\n      <div *ngIf=\\\"myData\\\">\\r\\n              <div *ngIf=\\\"myData.error==false; else inviteerror\\\">\\r\\n                    <div *ngIf=\\\"myData.success_msg; else messagecommon\\\">\\r\\n                      <ngb-alert type=\\\"success\\\" *ngIf=\\\"!closed\\\" (close)=\\\"closed=true\\\">{{myData.success_msg}}</ngb-alert>    \\r\\n                    </div>     \\r\\n                    <ng-template #messagecommon>\\r\\n                        <ngb-alert type=\\\"success\\\" *ngIf=\\\"!closed\\\" (close)=\\\"closed=true\\\">The Customer List has been generated.</ngb-alert>\\r\\n                    </ng-template>         \\r\\n              </div>\\r\\n              <ng-template #inviteerror>\\r\\n                      <ngb-alert type=\\\"danger\\\" *ngIf=\\\"!closed\\\" (close)=\\\"closed=true\\\">{{myData.error_msg}}</ngb-alert> \\r\\n              </ng-template>\\r\\n      </div>      \\r\\n  </div>\\r\\n  </div>\\r\\n \\r\\n  <div class=\\\"row justify-content-md-center\\\">\\r\\n    \\r\\n  <div class=\\\"col-md-7\\\">        \\r\\n        <div>  \\r\\n                <form class=\\\"form-inline\\\" #InviteSearch=\\\"ngForm\\\" (ngSubmit)=\\\"searchlist(InviteSearch.value); InviteSearch.reset() \\\" style=\\\"display: -webkit-inline-box;\\\">\\r\\n                    <input class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" type=\\\"text\\\" placeholder=\\\"Search using Email\\\" >\\r\\n                </form> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br><br>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"inviteList()\\\">Full List</button>&nbsp;\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"pendingList()\\\">Pending Invites</button>&nbsp;\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"acceptedList()\\\">Accepted Customers</button>&nbsp;\\r\\n        </div>\\r\\n        <br> <h1 class=\\\"row justify-content-md-center\\\">Customer List</h1> <br>\\r\\n\\r\\n    <!-- HTML table for our list of product records -->\\r\\n    <table class='table table-hover table-responsive'>\\r\\n\\r\\n        <tr>\\r\\n            <th>First name</th>\\r\\n            <th>Last Name</th>\\r\\n            <th>Company Name</th>\\r\\n            <th>Phone Number</th>\\r\\n            <th>Email</th>\\r\\n            <th>Actions</th>\\r\\n        </tr>\\r\\n\\r\\n        <!-- Use *ngFor directive to loop throught our list of products. -->\\r\\n        <tr *ngFor=\\\"let user of myData?.users\\\">\\r\\n            <td>{{user.fname}}</td>\\r\\n            <td>{{user.lname}}</td>\\r\\n            <td>{{user.company}}</td>\\r\\n            <td>{{user.phone}}</td>\\r\\n            <td>{{user.email}}</td>  \\r\\n            <td id=\\\"actions_td\\\">\\r\\n                    <!-- edit customer button -->\\r\\n                    \\r\\n                    <button (click)=\\\"updateCustomer(user.unique_id)\\\" class='btn btn-info '>\\r\\n                         Edit Customer\\r\\n                    </button>&nbsp;\\r\\n \\r\\n                    <!-- delete customer button -->\\r\\n                    <button (click)=\\\"deleteCustomer(user.unique_id)\\\" class='btn btn-danger '>\\r\\n                       Delete\\r\\n                    </button>\\r\\n            </td>         \\r\\n        </tr>\\r\\n\\r\\n    </table>\\r\\n  </div>\\r\\n  </div>\\r\\n</div> \\r\\n\\r\\n\"","module.exports = \"#actions_td {\\n  display: inline-flex; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { routerTransition } from '../../router.animations';\nimport { InviteListService } from '../invite-list.service'; \n\n@Component({\n  selector: 'app-invite-list',\n  templateUrl: './invite-list.component.html',\n  styleUrls: ['./invite-list.component.scss'],\n  animations: [routerTransition()]\n})\nexport class InviteListComponent implements OnInit {\n\n  constructor(public router: Router,\n    private inviteListService: InviteListService) { }\n\n    myData:any;\n    public closed = false;  \n\n  ngOnInit() {\n     \n    this.inviteListService.invitelist()\n     .subscribe(user => {\n       // show an alert to tell the user if user was invited\n       console.log(user);\n       this.myData = user; \n    },\n    error => console.log(error)\n   );\n  }\n\n  acceptedList(){ \n    this.closed = false;\n    this.inviteListService.acceptedlist()\n     .subscribe(user => {\n       // show an alert to tell the user if user was invited\n       console.log(user);\n       this.myData = user; \n    },\n    error => console.log(error)\n   );\n   }\n\n   pendingList(){ \n    this.closed = false;\n    this.inviteListService.pendinglist()\n     .subscribe(user => {\n       // show an alert to tell the user if user was invited\n       console.log(user);\n       this.myData = user; \n    },\n    error => console.log(error)\n   );\n   }\n\n   inviteList(){ \n    this.closed = false;\n    this.inviteListService.invitelist()\n     .subscribe(user => {\n       // show an alert to tell the user if user was invited\n       console.log(user);\n       this.myData = user; \n    },\n    error => console.log(error)\n   );\n   }\n\n\n  searchlist(email:EmailString){\n    this.closed = false;\n    this.inviteListService.searchlist(email)\n     .subscribe(user => {\n       // show an alert to tell the user if user was invited\n       console.log(user);\n       this.myData = user; \n    },\n    error => console.log(error)\n   );\n  }\n\n  deleteCustomer(customerid:CustomerUID){\n    \n    this.closed = false;\n    this.inviteListService.deleteuser(customerid)\n     .subscribe(user => {\n       // show an alert to tell the user if user was invited\n       console.log(user);\n       this.myData = user; \n    },\n    error => console.log(error)\n   );\n       \n  }\n}\n\nexport interface InviteUserList { \n  fname:string;\n  lname:string;\n  company:string;\n  phone:string; \n  email: string;\n  inviteid: string;\n  updated_at:string;\n}\n\nexport interface EmailString {  \n  email: string;\n}\n\nexport interface CustomerUID {  \n  customerid:string;\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms'; \nimport { NgbCarouselModule, NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { InviteListRoutingModule } from './invite-list-routing.module';\nimport { InviteListComponent } from './invite-list.component';\nimport { PageHeaderModule } from '../../shared';\n\n@NgModule({\n  imports: [CommonModule, FormsModule,\n    ReactiveFormsModule,    \n    NgbCarouselModule.forRoot(),\n    NgbAlertModule.forRoot(),\n    InviteListRoutingModule, PageHeaderModule],\n  declarations: [InviteListComponent]\n})\nexport class InviteListModule { }\n"],"sourceRoot":""}